/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bean.Funcionario;
import bean.Manutençao;
import bean.Peça;
import bean.Veiculo;
import dao.FuncionarioDao;
import dao.ManutençaoDao;
import dao.PeçaDao;
import dao.VeiculoDao;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bjewjb ndfas
 */
public class FormManutençao extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormManutenção
     */
    public FormManutençao() {
        initComponents();
        this.setVisible(true);
        this.atualizaComboVeiculo();
        this.atualizaComboFuncionario();
        this.atualizaComboPeça();
        this.atualizaLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        veiculoCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        funcCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        pecaCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        valorTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Ordens de Serviço");

        jLabel1.setText("Id");

        idTxt.setEditable(false);

        jLabel2.setText("Veiculo");

        veiculoCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Funcionario");

        funcCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Peça");

        pecaCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Valor");

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Limpa");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Veiculo", "Funcionario", "Peça", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(veiculoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pecaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(funcCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(valorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
            .addGroup(layout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(veiculoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(funcCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pecaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(valorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            Manutençao veiculo = new Manutençao();
            veiculo.setValor(Integer.parseInt(this.valorTxt.getText()));
            Object obj = this.funcCombo.getModel().getSelectedItem();
            if (obj instanceof Funcionario) {
                veiculo.setFuncionario((Funcionario) obj);
            } else {
                JOptionPane.showMessageDialog(null, "O Funcionario deve ser informado!!");
                return;
            }
            obj = this.pecaCombo.getModel().getSelectedItem();
            if (obj instanceof Peça) {
                veiculo.setPeça((Peça) obj);
            } else {
                JOptionPane.showMessageDialog(null, "A Peça deve ser informado!!");
                return;
            }
            obj = this.veiculoCombo.getModel().getSelectedItem();
            if (obj instanceof Veiculo) {
                veiculo.setVeiculo((Veiculo) obj);
            } else {
                JOptionPane.showMessageDialog(null, "O Veiculo deve ser informado!!");
                return;
            }
            ManutençaoDao veiculodao = new ManutençaoDao(ViewSistema.getConexao());
            int cod = this.intCampoTelas(this.idTxt.getText());
            if (cod > 0) {
                veiculo.setId(cod);
                veiculodao.update(veiculo);
                this.atualizaLista();
                this.limpatela();

            } else {

                veiculodao.create(veiculo);
                this.atualizaLista();
                this.limpatela();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Número mal formatado [Valor]");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() > 1) {
            JTable obj = (JTable) evt.getComponent();
            int linha = obj.getSelectedRow();
            Integer cod = (Integer) obj.getModel().getValueAt(linha, 0);
            Manutençao manut = new Manutençao(cod);
            this.preencheTela(manut);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int cod = this.intCampoTelas(this.idTxt.getText());
        if (cod > 0) {
            Manutençao manut = new Manutençao(cod);
            ManutençaoDao manutDao = new ManutençaoDao(ViewSistema.getConexao());
            try {
                manutDao.delete(manut);
            } catch (SQLException ex) {
                Logger.getLogger(FormVeiculo.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.limpatela();
            this.atualizaLista();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void atualizaComboVeiculo() {
        try {
            VeiculoDao clienteDAO = new VeiculoDao(ViewSistema.getConexao());
            List<Veiculo> lista = clienteDAO.listaTodos();
            Vector v = new Vector(lista);
            v.add(0, "");
            ComboBoxModel cbm = new DefaultComboBoxModel(v);
            this.veiculoCombo.setModel(cbm);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, String.format("Erro ao ler os Veiculos:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormVeiculo.class.getName()).log(Level.WARNING, "Erro ao ler os Veiculos", ex);
        }
    }

    private void atualizaComboFuncionario() {
        try {
            FuncionarioDao funcDAO = new FuncionarioDao(ViewSistema.getConexao());
            List<Funcionario> lista = funcDAO.listaTodos();
            Vector v = new Vector(lista);
            v.add(0, "");
            ComboBoxModel cbm = new DefaultComboBoxModel(v);
            this.funcCombo.setModel(cbm);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, String.format("Erro ao ler os Funcionario:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormVeiculo.class.getName()).log(Level.WARNING, "Erro ao ler os Funcionario", ex);
        }
    }

    private void atualizaComboPeça() {
        try {
            PeçaDao peçaDAO = new PeçaDao(ViewSistema.getConexao());
            List<Peça> lista = peçaDAO.listaTodos();
            Vector v = new Vector(lista);
            v.add(0, "");
            ComboBoxModel cbm = new DefaultComboBoxModel(v);
            this.pecaCombo.setModel(cbm);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, String.format("Erro ao ler as:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormVeiculo.class.getName()).log(Level.WARNING, "Erro ao ler as peças", ex);
        }
    }

    private boolean preencheTela(Manutençao manut) {
        boolean ret = false;
        try {
            ManutençaoDao manutDAO = new ManutençaoDao(ViewSistema.getConexao());
            manut = manutDAO.retrieve(manut);
            if (manut != null && manut.getId() > 0) {
                this.idTxt.setText(Integer.toString(manut.getId()));
                this.valorTxt.setText(Integer.toString(manut.getValor()));
                this.funcCombo.setSelectedItem(manut.getFuncionario());
                this.pecaCombo.setSelectedItem(manut.getPeça());
                this.veiculoCombo.setSelectedItem(manut.getVeiculo());
                ret = true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, String.format("Não foi possível carregar as manutenções: %s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);

        }
        return ret;
    }

    private void atualizaLista() {
        try {
            ManutençaoDao manutDAO = new ManutençaoDao(ViewSistema.getConexao());
            List<Manutençao> lista = manutDAO.listaTodos();
            DefaultTableModel dtm = (DefaultTableModel) this.jTable1.getModel();
            dtm.setRowCount(0);
            for (Manutençao manut : lista) {
                dtm.addRow(new Object[]{manut.getId(), manut.getVeiculo(), manut.getFuncionario(), manut.getPeça(), manut.getValor()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, String.format("Erro ao ler as manutenções:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpatela() {
        this.veiculoCombo.setSelectedItem("");
        this.funcCombo.setSelectedItem("");
        this.pecaCombo.setSelectedItem("");
        this.idTxt.setText("");
        this.valorTxt.setText("");

    }

    private int intCampoTelas(String valor) {
        int ret = 0;
        try {
            ret = Integer.parseInt(valor);
        } catch (NumberFormatException ex) {
        }
        return ret;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox funcCombo;
    private javax.swing.JTextField idTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox pecaCombo;
    private javax.swing.JTextField valorTxt;
    private javax.swing.JComboBox veiculoCombo;
    // End of variables declaration//GEN-END:variables
}
